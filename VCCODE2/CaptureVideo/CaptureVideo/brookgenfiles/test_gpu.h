
namespace {
	const char __sub255_cal_desc_tech0_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x000000FF,0x000000FF,0x000000FF,0x000000FF\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_literal l13,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"mov r274.xy__,v0.xyzw\n"
		"call 38 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r273.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r282.x___,l12.x000\n"
		"mov r271.x___,r282.x000\n"
		"mov r283.x___,r271.x000\n"
		"mov r284.x___,r269.x000\n"
		"iadd r272.x___,r283.x000,r284_neg(xyzw).x000\n"
		"mov r285.x___,r272.x000\n"
		"mov r270.x___,r285.x000\n"
		"ret\n"
		"\n"
		"func 38\n"
		"mov r278.xy__,r274.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r278.xy00\n"
		"call 20 \n"
		"mov r286.x___,r143.x000\n"
		"mov r287.x___,r286.x000\n"
		"mov r276.x___,r287.x000\n"
		"mov r269.x___,r276.x000\n"
		"call 37 \n"
		"mov r277.x___,r270.x000\n"
		"mov r279.x___,r277.x000\n"
		"mov r280.x___,r279.x000\n"
		"mov r280._y__,l13.0x00\n"
		"mov r280.__z_,l13.00x0\n"
		"mov r280.___w,l13.000x\n"
		"mov r275.xyzw,r280.xyzw\n"
		"mov r273.xyzw,r275.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	const char __sub255_cal_desc_tech1_pass0[] = "il_ps_2_0\n"
		"dcl_literal l0,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l1,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l2,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF\n"
		"dcl_literal l3,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF,0x7FFFFFFF\n"
		"dcl_literal l4,0x7F800000,0x7F800000,0x7F800000,0x7F800000\n"
		"dcl_literal l5,0x80000000,0x80000000,0x80000000,0x80000000\n"
		"dcl_literal l6,0x3E9A209B,0x3E9A209B,0x3E9A209B,0x3E9A209B\n"
		"dcl_literal l7,0x3F317218,0x3F317218,0x3F317218,0x3F317218\n"
		"dcl_literal l8,0x40490FDB,0x40490FDB,0x40490FDB,0x40490FDB\n"
		"dcl_literal l9,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB,0x3FC90FDB\n"
		"dcl_literal l10,0x00000003,0x00000003,0x00000003,0x00000003\n"
		"dcl_literal l11,0x00000002,0x00000002,0x00000002,0x00000002\n"
		"dcl_literal l12,0x00000000,0x00000000,0x00000000,0x00000000\n"
		"dcl_literal l13,0x00000001,0x00000001,0x00000001,0x00000001\n"
		"dcl_literal l14,0x3F000000,0x3F000000,0x3F000000,0x3F000000\n"
		"dcl_literal l15,0x000000FF,0x000000FF,0x000000FF,0x000000FF\n"
		"dcl_output_usage(generic) o0.xyzw\n"
		"dcl_resource_id(0)_type(2d,unnorm)_fmtx(float)_fmty(float)_fmtz(float)_fmtw(float)\n"
		"dcl_input_position_interp(linear_noperspective) v0.xy__\n"
		"dcl_cb cb0[2]\n"
		"mov r349.xy__,v0.xyzw\n"
		"mov r342.xyzw,cb0[l0.x + 0].xyzw\n"
		"mov r343.xyzw,cb0[l0.x + 1].xyzw\n"
		"call 42 \n"
		"call 0 \n"
		"endmain\n"
		"\n"
		"func 0\n"
		"mov o0.xyzw,r348.xyzw\n"
		"ret\n"
		"\n"
		"func 20\n"
		"ieq r0.x___,r144.x000,l0.x000\n"
		"if_logicalnz r0.x000\n"
		"sample_resource(0)_sampler(0) r146.xyzw,r145.xy00\n"
		"endif\n"
		"mov r147.x___,r146.x000\n"
		"mov r143.x___,r147.x000\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 37\n"
		"mov r277.x___,l12.x000\n"
		"mov r277._y__,l12.0x00\n"
		"mov r277.__z_,l12.00x0\n"
		"mov r277.___w,l12.000x\n"
		"mov r273.xyzw,r277.xyzw\n"
		"ftoi r360.xy__,r270.xy00\n"
		"mov r278.xy__,r360.xy00\n"
		"mov r274.xy__,r278.xy00\n"
		"mov r361.x___,r274.y000\n"
		"imul r279.x___,r361.x000,r272.x000\n"
		"iadd r280.x___,r279.x000,r274.x000\n"
		"mov r275.x___,r280.x000\n"
		"mov r364.x___,r275.x000\n"
		"imax r362.x___,r275.x000,r364_neg(xyzw).x000\n"
		"mov r365.x___,r271.x000\n"
		"imax r363.x___,r271.x000,r365_neg(xyzw).x000\n"
		"udiv r366.x___,r362.x000,r363.x000\n"
		"inegate r367.x___,r366.x000\n"
		"ixor r368.x___,r275.x000,r271.x000\n"
		"and r368.x___,r368.x000,l5.x000\n"
		"cmov_logical r281.x___,r368.x000,r367.x000,r366.x000\n"
		"mov r276.x___,r281.x000\n"
		"imul r282.x___,r276.x000,r271.x000\n"
		"iadd r283.x___,r275.x000,r282_neg(xyzw).x000\n"
		"mov r273.x___,r283.x000\n"
		"mov r369.x___,r271.y000\n"
		"mov r372.x___,r276.x000\n"
		"imax r370.x___,r276.x000,r372_neg(xyzw).x000\n"
		"mov r373.x___,r369.x000\n"
		"imax r371.x___,r369.x000,r373_neg(xyzw).x000\n"
		"udiv r374.x___,r370.x000,r371.x000\n"
		"inegate r375.x___,r374.x000\n"
		"ixor r376.x___,r276.x000,r369.x000\n"
		"and r376.x___,r376.x000,l5.x000\n"
		"cmov_logical r284.x___,r376.x000,r375.x000,r374.x000\n"
		"mov r273.__z_,r284.00x0\n"
		"mov r377.x___,r273.z000\n"
		"mov r378.x___,r271.y000\n"
		"imul r285.x___,r377.x000,r378.x000\n"
		"iadd r286.x___,r276.x000,r285_neg(xyzw).x000\n"
		"mov r273._y__,r286.0x00\n"
		"mov r269.xyzw,r273.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"func 41\n"
		"mov r379.x___,l15.x000\n"
		"mov r346.x___,r379.x000\n"
		"mov r380.x___,r346.x000\n"
		"mov r381.x___,r344.x000\n"
		"iadd r347.x___,r380.x000,r381_neg(xyzw).x000\n"
		"mov r382.x___,r347.x000\n"
		"mov r345.x___,r382.x000\n"
		"ret\n"
		"\n"
		"func 42\n"
		"mov r270.xy__,r349.xy00\n"
		"mov r271.xyzw,r342.xyzw\n"
		"mov r272.xyzw,r343.xyzw\n"
		"call 37 \n"
		"mov r383.xyzw,r269.xyzw\n"
		"mov r355.xyzw,r383.xyzw\n"
		"mov r352.xyzw,r355.xyzw\n"
		"mov r354.xyzw,r355.xyzw\n"
		"mov r356.xy__,r349.xy00\n"
		"mov r144.x___,l0.x000\n"
		"mov r145.xy__,r356.xy00\n"
		"call 20 \n"
		"mov r384.x___,r143.x000\n"
		"mov r385.x___,r384.x000\n"
		"mov r351.x___,r385.x000\n"
		"mov r344.x___,r351.x000\n"
		"call 41 \n"
		"mov r353.x___,r345.x000\n"
		"mov r357.x___,r353.x000\n"
		"mov r358.x___,r357.x000\n"
		"mov r358._y__,l12.0x00\n"
		"mov r358.__z_,l12.00x0\n"
		"mov r358.___w,l12.000x\n"
		"mov r350.xyzw,r358.xyzw\n"
		"mov r348.xyzw,r350.xyzw\n"
		"ret_dyn\n"
		"ret\n"
		"\n"
		"end\n"
		"";

	static const brook::KernelDesc __sub255_cal_desc = brook::KernelDesc()
		.technique( brook::Technique()
			.pass( brook::Pass( "__sub255_cal_desc_tech0_pass0 " )
				.image(__sub255_cal_desc_tech0_pass0)
				.input(0, 0, ACCESS_STREAM)
				.output(1, 0, ACCESS_STREAM)
			)
		)
		.technique( brook::Technique()
			.addressTranslation()
			.pass( brook::Pass( "__sub255_cal_desc_tech1_pass0 " )
				.image(__sub255_cal_desc_tech1_pass0)
				.constant(1, brook::CONST_STREAMSHAPE)
				.constant(1, brook::CONST_BUFFERSHAPE)
				.input(0, 0, ACCESS_STREAM)
				.output(1, 0, ACCESS_STREAM)
			)
		);
	static const void* __sub255_cal = &__sub255_cal_desc;
}
